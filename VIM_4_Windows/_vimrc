source $VIMRUNTIME/vimrc_example.vim
behave xterm
set clipboard=unnamedplus,unnamed
set nocompatible 
"在处理未保存或只读文件的时候，弹出确认  
set confirm  
set mouse=
set number
set fileencodings=utf-8,gb2312,gbk,gb18030
set termencoding=utf-8

"Tab键的宽度  
set tabstop=4 

"禁止生成临时文件  
set nobackup  
set noswapfile
set noundofile

"搜索逐字符高亮  
set hlsearch  
set incsearch
" 在编辑过程中，在右下角显示光标位置的状态行  
set ruler     

" 侦测文件类型  
filetype on 
" 高亮显示匹配的括号  
set showmatch 

" 启动的时候不显示那个援助索马里儿童的提示  
set shortmess=atI  

"行内替换  
set gdefault 

set encoding=prc
set guifont=Monaco:h11
set diffexpr=MyDiff()
syntax enable
colorscheme elflord 
"这种主题生效
"colorscheme solarized 

" 高亮显示普通txt文件（需要txt.vim脚本）  
au BufRead,BufNewFile *  setfiletype txt 

function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg1 = substitute(arg1, '!', '\!', 'g')
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg2 = substitute(arg2, '!', '\!', 'g')
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let arg3 = substitute(arg3, '!', '\!', 'g')
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  let cmd = substitute(cmd, '!', '\!', 'g')
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

